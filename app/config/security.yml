security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

        #oauth:
            #id: my_oauth_members
        hwi:                               
            id: hwi_oauth.user.provider

        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        demo_login:
            pattern:  ^/demo/secured/login$
            security: false

        demo_secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: _demo_security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

        #secured_area:
        #    anonymous: ~
        #    oauth:
        #        resource_owners:
        #            facebook:           "/tata/check-facebook"
        #            google:             "/tata/check-google"
        #        login_path:        /tata
        #        use_forward:       false
        #        failure_path:      /tata
        #        oauth_user_provider:
        #            service: hwi_oauth.user.provider.entity


        login_social:
            pattern:    ^/tata$
            security: false
            anonymous:    true

        secured_area:
            pattern:    ^/
            form_login:
                provider: fos_userbundle
                login_path: /login
                check_path: /login_check
                csrf_provider: form.csrf_provider
            logout:       true
            anonymous:    true

            oauth:
                resource_owners:
                    google:             "/login/check-google"
                    facebook:           "/login/check-facebook"
                login_path:        /login
                failure_path:      /login

                # FOSUB integration
                oauth_user_provider:
                    #service: hwi_oauth.user.provider
                    service: my_user_provider

    access_control:
        - { path: ^/toto/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/tata/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        
        - { path: ^/tata, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connect, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ˆ/oauth/target, roles: ROLE_OAUTH_USER }
        - { path: ˆ/oauth/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }